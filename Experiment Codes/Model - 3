{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Model - 3","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMWytFs3Qc1z2+au9llNQFK"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"3k6GqtSZAjHc","colab_type":"code","outputId":"43397754-a284-4253-b460-42fa29e72b76","executionInfo":{"status":"ok","timestamp":1589125828701,"user_tz":-330,"elapsed":79867,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":713}},"source":["!pip install tensorflow-gpu"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting tensorflow-gpu\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/31/bf/c28971266ca854a64f4b26f07c4112ddd61f30b4d1f18108b954a746f8ea/tensorflow_gpu-2.2.0-cp36-cp36m-manylinux2010_x86_64.whl (516.2MB)\n","\u001b[K     |████████████████████████████████| 516.2MB 30kB/s \n","\u001b[?25hRequirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.18.4)\n","Requirement already satisfied: google-pasta>=0.1.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.2.0)\n","Requirement already satisfied: h5py<2.11.0,>=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (2.10.0)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.28.1)\n","Requirement already satisfied: scipy==1.4.1; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.4.1)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.1.0)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.12.0)\n","Requirement already satisfied: astunparse==1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.6.3)\n","Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.3.3)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.12.1)\n","Requirement already satisfied: keras-preprocessing>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.1.0)\n","Requirement already satisfied: protobuf>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (3.10.0)\n","Requirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.9.0)\n","Requirement already satisfied: tensorflow-estimator<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (2.2.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (3.2.1)\n","Requirement already satisfied: wheel>=0.26; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.34.2)\n","Requirement already satisfied: tensorboard<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (2.2.1)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.8.0->tensorflow-gpu) (46.1.3)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (1.6.0.post3)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (0.4.1)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (3.2.1)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (1.7.2)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (2.23.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (1.3.0)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (0.2.8)\n","Requirement already satisfied: cachetools<3.2,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (3.1.1)\n","Requirement already satisfied: rsa<4.1,>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (4.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (2020.4.5.1)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (2.9)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (3.1.0)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.6/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow-gpu) (0.4.8)\n","Installing collected packages: tensorflow-gpu\n","Successfully installed tensorflow-gpu-2.2.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4fz4Vj60SZ6o","colab_type":"code","outputId":"e80b877b-0d98-441a-c75b-24d6974cc9d4","executionInfo":{"status":"ok","timestamp":1589125832561,"user_tz":-330,"elapsed":83684,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":104}},"source":["!unzip /content/drive-download-20200428T190033Z-001.zip"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Archive:  /content/drive-download-20200428T190033Z-001.zip\n","  inflating: ValidationOnly.tsv      \n","  inflating: Ty.txt                  \n","  inflating: FinalTest.tsv           \n","  inflating: FinalTrainingOnly.tsv   \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pjKSfwmWA9Wi","colab_type":"code","colab":{}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import pandas as pd\n","import csv\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import LSTM, Dropout, Dense, Embedding ,Bidirectional\n","from sklearn.model_selection import train_test_split\n","import torch\n","from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jyEcYg-HA9a_","colab_type":"code","colab":{}},"source":["d = pd.read_csv('/content/FinalTrainingOnly.tsv', sep=\"\\t\", header=None )\n","\n","x=d[1]\n","y=d[2]\n","y=list(y)\n","x=list(x)\n","\n","for i in range(len(x)):\n","  if type(x[i])==float:\n","    x[i]=\" \"\n","    y[i]= 1\n","\n","y=np.array(y)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qS5KinVVA9Y_","colab_type":"code","colab":{}},"source":["v = pd.read_csv('/content/ValidationOnly.tsv', sep=\"\\t\", header=None )\n","\n","vx=v[1]\n","vy=v[2]\n","vy=list(vy)\n","vx=list(vx)\n","\n","for i in range(len(vx)):\n","  if type(vx[i])==float:\n","    vx[i]=\" \"\n","    vy[i]= 1\n","\n","vy=np.array(vy)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZSxIo7cVA9c4","colab_type":"code","colab":{}},"source":["t = pd.read_csv('/content/FinalTest.tsv', sep=\"\\t\", header=None )\n","tx=list(t[1])\n","for i in range(len(tx)):\n","  if type(tx[i])==float:\n","    tx[i]=\" \""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"rW4lWFIAOJ8F","colab_type":"code","colab":{}},"source":["ty = pd.read_csv('/content/Ty.txt', sep=\",\", header=None )\n","sentiment = []\n","for i in range(len(ty)):\n","    if ty[1][i]=='negative':\n","        sentiment.append(0)\n","    elif ty[1][i]=='neutral':\n","        sentiment.append(1)\n","    elif ty[1][i]=='positive':\n","        sentiment.append(2)\n","\n","ty = np.array(sentiment)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jGJQN7FtA9ew","colab_type":"code","colab":{}},"source":["tokenizer = Tokenizer(num_words=2500,split=' ')\n","tokenizer.fit_on_texts(x)\n","\n","X= tokenizer.texts_to_sequences(x)\n","X = pad_sequences(X,maxlen=50)\n","\n","VX= tokenizer.texts_to_sequences(vx)\n","VX = pad_sequences(VX,maxlen=50)\n","\n","\n","TX = tokenizer.texts_to_sequences(tx)\n","TX = pad_sequences(TX,maxlen=50)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mATzgG98Bl5D","colab_type":"code","colab":{}},"source":["vocab_size = 20000\n","embed_size = 128\n","epochs = 150"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BOhE87SuBl7S","colab_type":"code","outputId":"bded1c43-df71-446d-d655-6a915dd44a01","executionInfo":{"status":"ok","timestamp":1588186851172,"user_tz":-330,"elapsed":2533866,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["# Model no 3\n","\n","ip = tf.keras.Input(shape=(X.shape[1]))\n","em = Embedding(vocab_size, embed_size,trainable=True)(ip)\n","x = Bidirectional(LSTM(128,activation='tanh', return_sequences=True, dropout=0.15, recurrent_dropout=0.15))(em)\n","x = tf.keras.layers.Conv1D(64, kernel_size=3, padding='valid', kernel_initializer='glorot_uniform')(x)\n","avg_pool = tf.keras.layers.GlobalAveragePooling1D()(x)\n","max_pool = tf.keras.layers.GlobalMaxPool1D()(x)\n","x = tf.keras.layers.concatenate([avg_pool, max_pool])\n","x = Dense(3, activation='softmax')(x)\n","model = tf.keras.Model(inputs = ip , outputs = x)\n","model.compile(loss='sparse_categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999, epsilon=1e-07), metrics=['accuracy'])\n","history1 = model.fit(X, y, epochs=epochs, batch_size=128,verbose=2,validation_data=(VX,vy))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Epoch 1/150\n","115/115 - 93s - loss: 0.9082 - accuracy: 0.5587 - val_loss: 0.8116 - val_accuracy: 0.6137\n","Epoch 2/150\n","115/115 - 93s - loss: 0.7811 - accuracy: 0.6461 - val_loss: 0.8059 - val_accuracy: 0.6320\n","Epoch 3/150\n","115/115 - 92s - loss: 0.7191 - accuracy: 0.6876 - val_loss: 0.7389 - val_accuracy: 0.6473\n","Epoch 4/150\n","115/115 - 95s - loss: 0.6504 - accuracy: 0.7233 - val_loss: 0.8380 - val_accuracy: 0.6330\n","Epoch 5/150\n","115/115 - 93s - loss: 0.6039 - accuracy: 0.7452 - val_loss: 0.5335 - val_accuracy: 0.8053\n","Epoch 6/150\n","115/115 - 93s - loss: 0.4768 - accuracy: 0.8053 - val_loss: 0.4721 - val_accuracy: 0.8347\n","Epoch 7/150\n","115/115 - 93s - loss: 0.3877 - accuracy: 0.8472 - val_loss: 0.4557 - val_accuracy: 0.8533\n","Epoch 8/150\n","115/115 - 94s - loss: 0.3473 - accuracy: 0.8682 - val_loss: 0.5139 - val_accuracy: 0.8250\n","Epoch 9/150\n","115/115 - 94s - loss: 0.3660 - accuracy: 0.8583 - val_loss: 0.4378 - val_accuracy: 0.8800\n","Epoch 10/150\n","115/115 - 94s - loss: 0.2960 - accuracy: 0.8891 - val_loss: 0.4852 - val_accuracy: 0.8697\n","Epoch 11/150\n","115/115 - 95s - loss: 0.2709 - accuracy: 0.8988 - val_loss: 0.4720 - val_accuracy: 0.8827\n","Epoch 12/150\n","115/115 - 93s - loss: 0.2199 - accuracy: 0.9199 - val_loss: 0.5034 - val_accuracy: 0.8880\n","Epoch 13/150\n","115/115 - 93s - loss: 0.2184 - accuracy: 0.9204 - val_loss: 0.5194 - val_accuracy: 0.8883\n","Epoch 14/150\n","115/115 - 93s - loss: 0.2240 - accuracy: 0.9180 - val_loss: 0.5094 - val_accuracy: 0.8840\n","Epoch 15/150\n","115/115 - 92s - loss: 0.1990 - accuracy: 0.9302 - val_loss: 0.5014 - val_accuracy: 0.8897\n","Epoch 16/150\n","115/115 - 92s - loss: 0.1724 - accuracy: 0.9368 - val_loss: 0.6130 - val_accuracy: 0.8723\n","Epoch 17/150\n","115/115 - 94s - loss: 0.1905 - accuracy: 0.9315 - val_loss: 0.5478 - val_accuracy: 0.8943\n","Epoch 18/150\n","115/115 - 92s - loss: 0.1954 - accuracy: 0.9283 - val_loss: 0.5037 - val_accuracy: 0.8920\n","Epoch 19/150\n","115/115 - 92s - loss: 0.1842 - accuracy: 0.9339 - val_loss: 0.6240 - val_accuracy: 0.8660\n","Epoch 20/150\n","115/115 - 92s - loss: 0.1954 - accuracy: 0.9318 - val_loss: 0.7219 - val_accuracy: 0.8523\n","Epoch 21/150\n","115/115 - 92s - loss: 0.3548 - accuracy: 0.8835 - val_loss: 0.5675 - val_accuracy: 0.8757\n","Epoch 22/150\n","115/115 - 92s - loss: 0.2790 - accuracy: 0.8956 - val_loss: 0.4988 - val_accuracy: 0.8890\n","Epoch 23/150\n","115/115 - 92s - loss: 0.2041 - accuracy: 0.9238 - val_loss: 0.5099 - val_accuracy: 0.9030\n","Epoch 24/150\n","115/115 - 94s - loss: 0.1795 - accuracy: 0.9328 - val_loss: 0.5666 - val_accuracy: 0.8947\n","Epoch 25/150\n","115/115 - 92s - loss: 0.1734 - accuracy: 0.9389 - val_loss: 0.6021 - val_accuracy: 0.8890\n","Epoch 26/150\n","115/115 - 92s - loss: 0.2117 - accuracy: 0.9258 - val_loss: 0.5701 - val_accuracy: 0.9000\n","Epoch 27/150\n","115/115 - 92s - loss: 0.1847 - accuracy: 0.9337 - val_loss: 0.6369 - val_accuracy: 0.8910\n","Epoch 28/150\n","115/115 - 92s - loss: 0.1897 - accuracy: 0.9331 - val_loss: 0.6868 - val_accuracy: 0.8580\n","Epoch 29/150\n","115/115 - 92s - loss: 0.2170 - accuracy: 0.9214 - val_loss: 0.5961 - val_accuracy: 0.8997\n","Epoch 30/150\n","115/115 - 94s - loss: 0.1892 - accuracy: 0.9322 - val_loss: 0.5998 - val_accuracy: 0.8937\n","Epoch 31/150\n","115/115 - 92s - loss: 0.1668 - accuracy: 0.9390 - val_loss: 0.6090 - val_accuracy: 0.8983\n","Epoch 32/150\n","115/115 - 92s - loss: 0.1700 - accuracy: 0.9398 - val_loss: 0.5943 - val_accuracy: 0.8893\n","Epoch 33/150\n","115/115 - 92s - loss: 0.1672 - accuracy: 0.9400 - val_loss: 0.5625 - val_accuracy: 0.8953\n","Epoch 34/150\n","115/115 - 92s - loss: 0.1654 - accuracy: 0.9415 - val_loss: 0.6228 - val_accuracy: 0.8967\n","Epoch 35/150\n","115/115 - 92s - loss: 0.1609 - accuracy: 0.9447 - val_loss: 0.6714 - val_accuracy: 0.8837\n","Epoch 36/150\n","115/115 - 93s - loss: 0.3147 - accuracy: 0.9061 - val_loss: 1.2021 - val_accuracy: 0.7590\n","Epoch 37/150\n","115/115 - 94s - loss: 0.3435 - accuracy: 0.8894 - val_loss: 0.5990 - val_accuracy: 0.8710\n","Epoch 38/150\n","115/115 - 93s - loss: 0.2300 - accuracy: 0.9146 - val_loss: 0.5343 - val_accuracy: 0.8927\n","Epoch 39/150\n","115/115 - 93s - loss: 0.2099 - accuracy: 0.9217 - val_loss: 0.6485 - val_accuracy: 0.8727\n","Epoch 40/150\n","115/115 - 93s - loss: 0.2215 - accuracy: 0.9211 - val_loss: 0.6417 - val_accuracy: 0.8867\n","Epoch 41/150\n","115/115 - 93s - loss: 0.1838 - accuracy: 0.9321 - val_loss: 0.6201 - val_accuracy: 0.9007\n","Epoch 42/150\n","115/115 - 94s - loss: 0.1697 - accuracy: 0.9396 - val_loss: 0.7384 - val_accuracy: 0.8663\n","Epoch 43/150\n","115/115 - 95s - loss: 0.2415 - accuracy: 0.9173 - val_loss: 0.6249 - val_accuracy: 0.8973\n","Epoch 44/150\n","115/115 - 94s - loss: 0.1735 - accuracy: 0.9350 - val_loss: 0.7901 - val_accuracy: 0.8530\n","Epoch 45/150\n","115/115 - 94s - loss: 0.2446 - accuracy: 0.9161 - val_loss: 0.6253 - val_accuracy: 0.8900\n","Epoch 46/150\n","115/115 - 93s - loss: 0.2065 - accuracy: 0.9251 - val_loss: 0.6258 - val_accuracy: 0.8893\n","Epoch 47/150\n","115/115 - 93s - loss: 0.1654 - accuracy: 0.9385 - val_loss: 0.6309 - val_accuracy: 0.8927\n","Epoch 48/150\n","115/115 - 93s - loss: 0.1620 - accuracy: 0.9416 - val_loss: 0.7121 - val_accuracy: 0.8923\n","Epoch 49/150\n","115/115 - 93s - loss: 0.1519 - accuracy: 0.9437 - val_loss: 0.6822 - val_accuracy: 0.9023\n","Epoch 50/150\n","115/115 - 94s - loss: 0.1596 - accuracy: 0.9434 - val_loss: 0.6961 - val_accuracy: 0.9047\n","Epoch 51/150\n","115/115 - 92s - loss: 0.1553 - accuracy: 0.9461 - val_loss: 0.6767 - val_accuracy: 0.9057\n","Epoch 52/150\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ZJS1FlQwdD05","colab_type":"code","colab":{}},"source":["a = model.predict(VX)\n","a = np.array(a)\n","a = np.argmax(a,axis=1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UB-c7CDUdEFh","colab_type":"code","colab":{}},"source":["for i in range(len(a)):\n","  print(str(a[i])+\"     \"+str(vy[i]))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QrM7nr17Bl9e","colab_type":"code","colab":{}},"source":["val_loss, val_acc = model.evaluate(VX,vy)\n","print(\"validation accuracy = \" + str(val_acc) )"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"YEM8B9zWQ3h_","colab_type":"code","colab":{}},"source":["test_loss, test_acc = model.evaluate(TX,ty)\n","print(\"Test accuracy = \" + str(test_acc) )"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2cIWeHzJBl_9","colab_type":"code","colab":{}},"source":["history = history1\n","acc = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","loss=history.history['loss']\n","val_loss=history.history['val_loss']\n","epochs_range = range(epochs)\n","plt.figure(figsize=(8, 8))\n","plt.plot(epochs_range, acc, label='Training Accuracy')\n","plt.plot(epochs_range, val_acc, label='Validation Accuracy')\n","plt.grid()\n","plt.legend(loc='lower right')\n","plt.title('Training and Validation Accuracy')\n","plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"U-8bMFijODoL","colab_type":"code","colab":{}},"source":["epochs_range = range(epochs)\n","plt.figure(figsize=(8, 8))\n","plt.plot(epochs_range, loss, label='Training Loss')\n","plt.plot(epochs_range, val_loss, label='Validation Loss')\n","plt.grid()\n","plt.legend(loc='lower right')\n","plt.title('Training and Validation Losses')\n","plt.show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GZEaLQDSVM6J","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}