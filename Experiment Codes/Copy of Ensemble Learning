{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Ensemble Learning","provenance":[{"file_id":"1StJqF5EjML4tNLppl5kKbgnicf5W0K_t","timestamp":1583650886930},{"file_id":"1DKtYjZFLNDKGyuaiCuCqjEm3ZcBl6XzV","timestamp":1583579087416},{"file_id":"1L3W_7VWSZ7p-_F7qzLTqGihXtqCVPAYg","timestamp":1583566957449},{"file_id":"12OpFiJ7m_5MDFKjV_7gpOwwIyHWQdfqy","timestamp":1583565820696}],"collapsed_sections":[],"authorship_tag":"ABX9TyN8BisrcYOykpiEuhPpI7Ma"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"NntCGSmcoXoV","colab_type":"code","outputId":"0904be04-9510-406f-be91-248034999f5c","executionInfo":{"status":"ok","timestamp":1588194033229,"user_tz":-330,"elapsed":99123,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["!pip install tensorflow-gpu"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Collecting tensorflow-gpu\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/0a/93/c7bca39b23aae45cd2e85ad3871c81eccc63b9c5276e926511e2e5b0879d/tensorflow_gpu-2.1.0-cp36-cp36m-manylinux2010_x86_64.whl (421.8MB)\n","\u001b[K     |████████████████████████████████| 421.8MB 40kB/s \n","\u001b[?25hCollecting tensorflow-estimator<2.2.0,>=2.1.0rc0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/18/90/b77c328a1304437ab1310b463e533fa7689f4bfc41549593056d812fab8e/tensorflow_estimator-2.1.0-py2.py3-none-any.whl (448kB)\n","\u001b[K     |████████████████████████████████| 450kB 40.0MB/s \n","\u001b[?25hRequirement already satisfied: protobuf>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (3.10.0)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.28.1)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (3.2.1)\n","Requirement already satisfied: keras-applications>=1.0.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.0.8)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.1.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.12.1)\n","Requirement already satisfied: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.18.3)\n","Requirement already satisfied: wheel>=0.26; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.34.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.12.0)\n","Requirement already satisfied: scipy==1.4.1; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.4.1)\n","Collecting gast==0.2.2\n","  Downloading https://files.pythonhosted.org/packages/4e/35/11749bf99b2d4e3cceb4d55ca22590b0d7c2c62b9de38ac4a4a7f4687421/gast-0.2.2.tar.gz\n","Collecting tensorboard<2.2.0,>=2.1.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d9/41/bbf49b61370e4f4d245d4c6051dfb6db80cec672605c91b1652ac8cc3d38/tensorboard-2.1.1-py3-none-any.whl (3.8MB)\n","\u001b[K     |████████████████████████████████| 3.9MB 44.4MB/s \n","\u001b[?25hRequirement already satisfied: google-pasta>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.2.0)\n","Requirement already satisfied: keras-preprocessing>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (1.1.0)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.8.1)\n","Requirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-gpu) (0.9.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.8.0->tensorflow-gpu) (46.1.3)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras-applications>=1.0.8->tensorflow-gpu) (2.10.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (0.4.1)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (1.0.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (2.21.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (3.2.1)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (1.7.2)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (1.3.0)\n","Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (2.8)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (2020.4.5.1)\n","Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (3.0.4)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (1.24.3)\n","Requirement already satisfied: cachetools<3.2,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (3.1.1)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (0.2.8)\n","Requirement already satisfied: rsa<4.1,>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (4.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (3.1.0)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.6/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard<2.2.0,>=2.1.0->tensorflow-gpu) (0.4.8)\n","Building wheels for collected packages: gast\n","  Building wheel for gast (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for gast: filename=gast-0.2.2-cp36-none-any.whl size=7540 sha256=ee48aaaceeffa6acb07a5dd4df9a56e71d2f539fdfe6f1fa282eefdb2aec24f3\n","  Stored in directory: /root/.cache/pip/wheels/5c/2e/7e/a1d4d4fcebe6c381f378ce7743a3ced3699feb89bcfbdadadd\n","Successfully built gast\n","\u001b[31mERROR: tensorflow 2.2.0rc3 has requirement gast==0.3.3, but you'll have gast 0.2.2 which is incompatible.\u001b[0m\n","\u001b[31mERROR: tensorflow 2.2.0rc3 has requirement tensorboard<2.3.0,>=2.2.0, but you'll have tensorboard 2.1.1 which is incompatible.\u001b[0m\n","\u001b[31mERROR: tensorflow 2.2.0rc3 has requirement tensorflow-estimator<2.3.0,>=2.2.0rc0, but you'll have tensorflow-estimator 2.1.0 which is incompatible.\u001b[0m\n","\u001b[31mERROR: tensorflow-probability 0.10.0rc0 has requirement gast>=0.3.2, but you'll have gast 0.2.2 which is incompatible.\u001b[0m\n","Installing collected packages: tensorflow-estimator, gast, tensorboard, tensorflow-gpu\n","  Found existing installation: tensorflow-estimator 2.2.0\n","    Uninstalling tensorflow-estimator-2.2.0:\n","      Successfully uninstalled tensorflow-estimator-2.2.0\n","  Found existing installation: gast 0.3.3\n","    Uninstalling gast-0.3.3:\n","      Successfully uninstalled gast-0.3.3\n","  Found existing installation: tensorboard 2.2.1\n","    Uninstalling tensorboard-2.2.1:\n","      Successfully uninstalled tensorboard-2.2.1\n","Successfully installed gast-0.2.2 tensorboard-2.1.1 tensorflow-estimator-2.1.0 tensorflow-gpu-2.1.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0k46obCQhEWC","colab_type":"code","outputId":"c6099a10-fb31-4440-8557-128a909b6264","executionInfo":{"status":"ok","timestamp":1588194041773,"user_tz":-330,"elapsed":106977,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["!unzip /content/drive-download-20200428T190033Z-001.zip"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Archive:  /content/drive-download-20200428T190033Z-001.zip\n","  inflating: ValidationOnly.tsv      \n","  inflating: Ty.txt                  \n","  inflating: FinalTest.tsv           \n","  inflating: FinalTrainingOnly.tsv   \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EqqRj5P_odPu","colab_type":"code","colab":{}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import pandas as pd\n","import csv\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import LSTM, Dropout, Dense, Embedding ,Bidirectional\n","from sklearn.model_selection import train_test_split\n","import torch\n","from sklearn.metrics import accuracy_score"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8_n5CCgiodS-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"b8b16d3a-acd6-4647-98c1-bb6f335a8d81","executionInfo":{"status":"ok","timestamp":1588194804663,"user_tz":-330,"elapsed":1919,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}}},"source":["d = pd.read_csv('/content/FinalTrainingOnly.tsv', sep=\"\\t\", header=None )\n","\n","x=d[1]\n","y=d[2]\n","y=list(y)\n","x=list(x)\n","\n","for i in range(len(x)):\n","  if type(x[i])==float:\n","    x[i]=\" \"\n","    y[i]= 1\n","\n","y=np.array(y)\n","len(y)"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14594"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"B2-_zmvQDQOy","colab_type":"code","colab":{}},"source":["v = pd.read_csv('/content/ValidationOnly.tsv', sep=\"\\t\", header=None )\n","\n","vx=v[1]\n","vy=v[2]\n","vy=list(vy)\n","vx=list(vx)\n","\n","for i in range(len(vx)):\n","  if type(vx[i])==float:\n","    vx[i]=\" \"\n","    vy[i]= 1\n","\n","vy=np.array(vy)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e334IozGodVP","colab_type":"code","colab":{}},"source":["t = pd.read_csv('/content/FinalTest.tsv', sep=\"\\t\", header=None )\n","tx=list(t[1])\n","for i in range(len(tx)):\n","  if type(tx[i])==float:\n","    tx[i]=\" \""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"oUd0qrMWUATS","colab_type":"code","colab":{}},"source":["ty = pd.read_csv('/content/Ty.txt', sep=\",\", header=None )\n","sentiment = []\n","for i in range(len(ty)):\n","    if ty[1][i]=='negative':\n","        sentiment.append(0)\n","    elif ty[1][i]=='neutral':\n","        sentiment.append(1)\n","    elif ty[1][i]=='positive':\n","        sentiment.append(2)\n","\n","ty = np.array(sentiment)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8QBRjdvzuLdX","colab_type":"code","colab":{}},"source":["xx= list(x)\n","yy = list(y)\n","for i in range(len(vx)):\n","  xx.append(vx[i])\n","  yy.append(vy[i])\n","\n","x, vx, y, vy = train_test_split(xx, yy, test_size=0.17, random_state=42)\n","\n","x = np.array(x)\n","vx = np.array(vx)\n","y = np.array(y)\n","vy = np.array(vy)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"anl0VfrBodZY","colab_type":"code","colab":{}},"source":["tokenizer = Tokenizer(num_words=2500,split=' ')\n","tokenizer.fit_on_texts(x)\n","\n","X= tokenizer.texts_to_sequences(x)\n","X = pad_sequences(X,maxlen=50)\n","\n","VX= tokenizer.texts_to_sequences(vx)\n","VX = pad_sequences(VX,maxlen=50)\n","\n","\n","TX = tokenizer.texts_to_sequences(tx)\n","TX = pad_sequences(TX,maxlen=50)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"J51f1HH8odb2","colab_type":"code","colab":{}},"source":["vocab_size = 20000\n","embed_size = 128"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"N9sHNymjodeP","colab_type":"code","outputId":"cbcc3c23-0201-4ea0-e5f5-d0351dbc8d35","executionInfo":{"status":"ok","timestamp":1588195006950,"user_tz":-330,"elapsed":164966,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":272}},"source":["# Model no 1 \n","\n","ip = tf.keras.Input(shape=(X.shape[1]))\n","em = Embedding(vocab_size, embed_size,trainable=True)(ip)\n","x = Bidirectional(LSTM(128,activation='tanh', return_sequences=True, dropout=0.15, recurrent_dropout=0.15))(em) # Dimn shd be (None,200,128)\n","x = tf.keras.layers.Conv1D(64, kernel_size=3, padding='valid', kernel_initializer='glorot_uniform')(x)\n","avg_pool = tf.keras.layers.GlobalAveragePooling1D()(x)\n","max_pool = tf.keras.layers.GlobalMaxPool1D()(x)\n","x = tf.keras.layers.concatenate([avg_pool, max_pool])\n","x = Dense(3, activation='softmax')(x)\n","bi = tf.keras.Model(inputs = ip , outputs = x)\n","bi.compile(loss='sparse_categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999, epsilon=1e-07), metrics=['accuracy'])\n","# tf.keras.utils.plot_model(bi, 'my_first_model.png')\n","history1 = bi.fit(X, y, epochs=7, batch_size=128,verbose=2,validation_data=(VX,vy))"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Train on 14603 samples, validate on 2991 samples\n","Epoch 1/7\n","14603/14603 - 30s - loss: 0.8978 - accuracy: 0.5658 - val_loss: 0.8101 - val_accuracy: 0.6252\n","Epoch 2/7\n","14603/14603 - 20s - loss: 0.7587 - accuracy: 0.6653 - val_loss: 0.8059 - val_accuracy: 0.6526\n","Epoch 3/7\n","14603/14603 - 20s - loss: 0.6755 - accuracy: 0.7123 - val_loss: 0.7875 - val_accuracy: 0.6583\n","Epoch 4/7\n","14603/14603 - 20s - loss: 0.5917 - accuracy: 0.7536 - val_loss: 0.7940 - val_accuracy: 0.6764\n","Epoch 5/7\n","14603/14603 - 20s - loss: 0.4945 - accuracy: 0.7995 - val_loss: 0.8508 - val_accuracy: 0.6740\n","Epoch 6/7\n","14603/14603 - 20s - loss: 0.4159 - accuracy: 0.8323 - val_loss: 1.0451 - val_accuracy: 0.6683\n","Epoch 7/7\n","14603/14603 - 20s - loss: 0.3510 - accuracy: 0.8629 - val_loss: 1.1228 - val_accuracy: 0.6730\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o_ywKYTHDS24","colab_type":"code","outputId":"20f97a1c-84e3-4bdf-e842-6a91583fbbab","executionInfo":{"status":"ok","timestamp":1588195023633,"user_tz":-330,"elapsed":180510,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["# Model no 2 \n","\n","ip = tf.keras.Input(shape=(X.shape[1]))\n","x = Embedding(vocab_size, embed_size,trainable=True)(ip)\n","x = tf.keras.layers.Conv1D(64, kernel_size=3, padding='valid', kernel_initializer='glorot_uniform')(x)\n","x = tf.keras.layers.GlobalMaxPool1D()(x)\n","x = tf.reshape(x,(-1,1,64))\n","x = LSTM(64,activation='tanh', dropout=0.15, recurrent_dropout=0.15)(x)\n","x = Dense(3, activation='softmax')(x)\n","cl = tf.keras.Model(inputs=ip, outputs=x)\n","cl.compile(loss='sparse_categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999, epsilon=1e-07), metrics=['accuracy'])\n","history = cl.fit(X, y, epochs=5, batch_size=128,verbose=2,validation_data=(VX,vy))"],"execution_count":28,"outputs":[{"output_type":"stream","text":["Train on 14603 samples, validate on 2991 samples\n","Epoch 1/5\n","14603/14603 - 5s - loss: 0.8837 - accuracy: 0.5719 - val_loss: 0.7964 - val_accuracy: 0.6459\n","Epoch 2/5\n","14603/14603 - 3s - loss: 0.7320 - accuracy: 0.6808 - val_loss: 0.7840 - val_accuracy: 0.6566\n","Epoch 3/5\n","14603/14603 - 3s - loss: 0.6250 - accuracy: 0.7431 - val_loss: 0.7837 - val_accuracy: 0.6647\n","Epoch 4/5\n","14603/14603 - 3s - loss: 0.5206 - accuracy: 0.7994 - val_loss: 0.8314 - val_accuracy: 0.6683\n","Epoch 5/5\n","14603/14603 - 3s - loss: 0.4496 - accuracy: 0.8325 - val_loss: 0.8420 - val_accuracy: 0.6757\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2Z-hKC3-bnSA","colab_type":"code","outputId":"b063d527-eac7-41f9-e478-62641f3ef53c","executionInfo":{"status":"ok","timestamp":1588195047713,"user_tz":-330,"elapsed":204286,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"source":["# Model no 3\n","\n","model = Sequential()\n","model.add(Embedding(vocab_size, embed_size, input_shape = (X.shape[1],)))\n","model.add(LSTM(units=264, activation='tanh'))\n","model.add(Dense(units=64,activation='tanh'))\n","model.add(Dropout(0.5))\n","model.add(Dense(units=3, activation='softmax'))\n","\n","model.compile(optimizer='adam', loss=\"sparse_categorical_crossentropy\", metrics = ['accuracy'])\n","history = model.fit(X, y, epochs=6, batch_size=128,verbose=2,validation_data=(VX,vy))"],"execution_count":29,"outputs":[{"output_type":"stream","text":["Train on 14603 samples, validate on 2991 samples\n","Epoch 1/6\n","14603/14603 - 5s - loss: 0.9209 - accuracy: 0.5397 - val_loss: 0.8447 - val_accuracy: 0.5991\n","Epoch 2/6\n","14603/14603 - 4s - loss: 0.7676 - accuracy: 0.6611 - val_loss: 0.8033 - val_accuracy: 0.6272\n","Epoch 3/6\n","14603/14603 - 4s - loss: 0.7066 - accuracy: 0.6927 - val_loss: 0.7829 - val_accuracy: 0.6540\n","Epoch 4/6\n","14603/14603 - 4s - loss: 0.6452 - accuracy: 0.7290 - val_loss: 0.7957 - val_accuracy: 0.6667\n","Epoch 5/6\n","14603/14603 - 4s - loss: 0.5948 - accuracy: 0.7570 - val_loss: 0.8007 - val_accuracy: 0.6606\n","Epoch 6/6\n","14603/14603 - 4s - loss: 0.5388 - accuracy: 0.7812 - val_loss: 0.8474 - val_accuracy: 0.6720\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"El7T9qqKKMVH","colab_type":"code","outputId":"cb8d79ed-150f-41f5-968d-685cc295ab61","executionInfo":{"status":"ok","timestamp":1588195060999,"user_tz":-330,"elapsed":217237,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":680}},"source":["# Model no 4\n","\n","ip = tf.keras.Input(shape=(X.shape[1]))\n","b = Embedding(vocab_size, embed_size,trainable=True)(ip)\n","c1 = tf.keras.layers.Conv1D(64, kernel_size=3, padding='valid', kernel_initializer='glorot_uniform')(b)\n","c2 = tf.keras.layers.Conv1D(64, kernel_size=4, padding='valid', kernel_initializer='glorot_uniform')(b)\n","c3 = tf.keras.layers.Conv1D(64, kernel_size=5, padding='valid', kernel_initializer='glorot_uniform')(b)\n","x = tf.keras.layers.concatenate([c1, c2, c3],axis=1)\n","x = tf.keras.layers.GlobalMaxPool1D()(x)\n","x = tf.reshape(x,(-1,1,64))\n","x = Dense(64,activation='tanh')(x)\n","x = Dense(3, activation='softmax')(x)\n","cnn = tf.keras.Model(inputs=ip, outputs=x)\n","cnn.compile(loss='sparse_categorical_crossentropy', optimizer=tf.keras.optimizers.Adam(learning_rate=0.01, beta_1=0.9, beta_2=0.999, epsilon=1e-07), metrics=['accuracy'])\n","cnn.summary()\n","history = cnn.fit(X, y, epochs=4, batch_size=128,verbose=2,validation_data=(VX,vy))"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Model: \"model_2\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_3 (InputLayer)            [(None, 50)]         0                                            \n","__________________________________________________________________________________________________\n","embedding_3 (Embedding)         (None, 50, 128)      2560000     input_3[0][0]                    \n","__________________________________________________________________________________________________\n","conv1d_2 (Conv1D)               (None, 48, 64)       24640       embedding_3[0][0]                \n","__________________________________________________________________________________________________\n","conv1d_3 (Conv1D)               (None, 47, 64)       32832       embedding_3[0][0]                \n","__________________________________________________________________________________________________\n","conv1d_4 (Conv1D)               (None, 46, 64)       41024       embedding_3[0][0]                \n","__________________________________________________________________________________________________\n","concatenate_1 (Concatenate)     (None, 141, 64)      0           conv1d_2[0][0]                   \n","                                                                 conv1d_3[0][0]                   \n","                                                                 conv1d_4[0][0]                   \n","__________________________________________________________________________________________________\n","global_max_pooling1d_2 (GlobalM (None, 64)           0           concatenate_1[0][0]              \n","__________________________________________________________________________________________________\n","tf_op_layer_Reshape_1 (TensorFl [(None, 1, 64)]      0           global_max_pooling1d_2[0][0]     \n","__________________________________________________________________________________________________\n","dense_4 (Dense)                 (None, 1, 64)        4160        tf_op_layer_Reshape_1[0][0]      \n","__________________________________________________________________________________________________\n","dense_5 (Dense)                 (None, 1, 3)         195         dense_4[0][0]                    \n","==================================================================================================\n","Total params: 2,662,851\n","Trainable params: 2,662,851\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n","Train on 14603 samples, validate on 2991 samples\n","Epoch 1/4\n","14603/14603 - 4s - loss: 0.8753 - accuracy: 0.5765 - val_loss: 0.8829 - val_accuracy: 0.6092\n","Epoch 2/4\n","14603/14603 - 3s - loss: 0.7122 - accuracy: 0.6886 - val_loss: 0.7767 - val_accuracy: 0.6546\n","Epoch 3/4\n","14603/14603 - 3s - loss: 0.5328 - accuracy: 0.7839 - val_loss: 0.7590 - val_accuracy: 0.6784\n","Epoch 4/4\n","14603/14603 - 3s - loss: 0.3746 - accuracy: 0.8624 - val_loss: 0.9030 - val_accuracy: 0.6820\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"t27_jNYnF6UM","colab_type":"code","colab":{}},"source":["x1 = bi.predict(TX)\n","x2 = cl.predict(TX)\n","x3 = model.predict(TX)\n","x4 = cnn.predict(TX)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"EyBV0_dPYk6F","colab_type":"code","colab":{}},"source":["x4=np.reshape(x4,(3000,3))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mLxx3ZcNAJaR","colab_type":"code","colab":{}},"source":["a=[]\n","for i in range(len(x1)):\n","  b=[]\n","  for j in range(len(x1[i])):\n","    z = max(x1[i][j],x2[i][j],x3[i][j],x4[i][j] )\n","    b.append(z)\n","  a.append(b)\n","  b=[]\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"zNBUWxWQaCJM","colab_type":"code","colab":{}},"source":["a=np.array(a)\n","a=np.argmax(a,axis=1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pl1wVF5Yodnp","colab_type":"code","outputId":"75dc2a9f-23d8-4eef-b21e-da697e0b0149","executionInfo":{"status":"ok","timestamp":1588195222625,"user_tz":-330,"elapsed":4408,"user":{"displayName":"Tushar Baroi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKwyvzNDs2ci_wDwXPy3l6HgeaoSj_7sVZ6rvXPA=s64","userId":"15149585305159780195"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["test_acc = accuracy_score(ty,a)\n","print(\"Test accuracy = \" + str(test_acc) )"],"execution_count":37,"outputs":[{"output_type":"stream","text":["Test accuracy = 0.6276666666666667\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w-ZH9WpFdxz9","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}